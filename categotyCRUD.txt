router.post("", async (request, response) => {
  try {
    const { name, description } = request.body;
    const newCategory = await createCategory(name, description);
    // await newCategory.save();
    response.status(201).json(newCategory);
  } catch (error) {
    console.error("Error creating category:", error);
    response.status(500).send("Something went wrong!");
  }
});
router.put("/:id", async (request, response) => {
  try {
    const { id } = request.params;
    const { name, description } = request.body;
    const updatedCategory = await updateCategoryById(id, name, description);
    response.status(200).json(updatedCategory);
  } catch (error) {
    console.error("Error updating category:", error);
    response.status(500).send("Something went wrong!");
  }
});

router.delete("/:id", async (request, response) => {
  try {
    const { id } = request.params;
    await deleteCategoryById(id);
    response.status(204).send();
  } catch (error) {
    console.error("Error deleting category:", error);
    response.status(500).send("Something went wrong!");
  }
});




// export const updateCategoryById = async (
//   id: string,
//   name: string,
//   description: string
// ) => {
//   return await categoryModel.findByIdAndUpdate(
//     id,
//     { name, description },
//     { new: true }
//   );
// };

// export const deleteCategoryById = async (id: string) => {
//   return await categoryModel.findByIdAndDelete(id);
// };

// export const createCategory = async (name: string, description: string) => {
//   const newCategory = new categoryModel({ name, description });
//   return await newCategory.save();
// };


______________________________________________________________________________________




// export const createWishList = async (userId: ObjectId) => {
//   const newWishList = new wishListModel({ userId, items: [] });
//   return await newWishList.save();
// };

// export const getWishList = async (userId: ObjectId) => {
//   let wishList;
//   wishList = await wishListModel.findOne({ userId });
//   if (!wishList) {
//     wishList = await createWishList(userId);
//   }
//   return wishList;
// };

// export const addItem = async (userId: ObjectId, product: IWishListItem) => {
//   let wishList = await getWishList(userId);
//   let isExist = wishList.items.find(
//     (item) => item.products == product.products
//   );
//   if (!isExist) {
//     wishList.items.push(product);
//   }
//   return await wishList.save();
// };

// export const removeItem = async (userId: ObjectId, productId: any) => {
//   let wishList = await getWishList(userId);
//   wishList.items.forEach((item, indx) => {
//     if (item.productId.toString() == productId) {
//       wishList.items.splice(indx, 1);
//     }
//   });
//   return await wishList.save();
// };

// export const clearWishList = async (userId: ObjectId) => {
//   let wishList = await getWishList(userId);
//   wishList.items = [];
//   return await wishList.save();
// };




// router.post("/", validateJWT, async (req: ExtendRequest, res) => {
//   try {
//     const userId = req.user?._id;
//     const productId: IWishListItem = req.body;
//     const updatedWishList = await addItem(userId, productId);
//     res.status(200).send(updatedWishList);
//   } catch (err) {
//     res.status(500).send("Something went wrong!");
//   }
// });

// router.delete("/:productId", validateJWT, async (req: ExtendRequest, res) => {
//   try {
//     const userId = req.user?._id;
//     const productId = req.params.productId;
//     const updatedWishList = await removeItem(userId, productId);
//     res.status(200).send(updatedWishList);
//   } catch (err) {
//     res.status(500).send("Something went wrong!");
//   }
// });

// router.delete("/", validateJWT, async (req: ExtendRequest, res) => {
//   try {
//     const userId = req.user?._id;
//     const updatedWishList = await clearWishList(userId);
//     res.status(200).send(updatedWishList);
//   } catch (err) {
//     res.status(500).send("Something went wrong!");
//   }
// });